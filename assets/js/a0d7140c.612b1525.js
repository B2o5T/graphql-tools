(self.webpackChunk_graphql_tools_website=self.webpackChunk_graphql_tools_website||[]).push([[5674],{5318:function(e,r,t){"use strict";t.d(r,{Zo:function(){return c},kt:function(){return m}});var n=t(7378);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=n.createContext({}),l=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},h=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,a=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),h=l(t),m=s,d=h["".concat(i,".").concat(m)]||h[m]||u[m]||a;return t?n.createElement(d,o(o({ref:r},c),{},{components:t})):n.createElement(d,o({ref:r},c))}));function m(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=t.length,o=new Array(a);o[0]=h;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p.mdxType="string"==typeof e?e:s,o[1]=p;for(var l=2;l<a;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5322:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return o},metadata:function(){return p},toc:function(){return i},default:function(){return c}});var n=t(9603),s=t(120),a=(t(7378),t(5318)),o={id:"server-setup",title:"Setup an HTTP server",sidebar_label:"Setup an HTTP server"},p={unversionedId:"server-setup",id:"server-setup",isDocsHomePage:!1,title:"Setup an HTTP server",description:"Here's an example using express-graphql:",source:"@site/docs/server-setup.md",sourceDirName:".",slug:"/server-setup",permalink:"/docs/server-setup",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/server-setup.md",version:"current",sidebar_label:"Setup an HTTP server",frontMatter:{id:"server-setup",title:"Setup an HTTP server",sidebar_label:"Setup an HTTP server"},sidebar:"someSidebar",previous:{title:"Stitching API",permalink:"/docs/stitch-api"},next:{title:"Loading GraphQL Schemas from different sources",permalink:"/docs/schema-loading"}},i=[{value:"Adding Subscriptions support",id:"adding-subscriptions-support",children:[]}],l={toc:i};function c(e){var r=e.components,t=(0,s.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Here's an example using express-graphql:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const express = require('express');\nconst { graphqlHTTP } = require('express-graphql');\n\nconst typeDefs = require('./graphql/types');\nconst resolvers = require('./graphql/resolvers');\n\nconst { makeExecutableSchema } = require('@graphql-tools/schema');\n\nconst schema = makeExecutableSchema({\n    typeDefs,\n    resolvers,\n});\n\nconst app = express();\napp.use('/graphql', graphqlHTTP({\n  schema,\n  graphiql: true,\n}));\n\napp.listen(3000, () => {\n    console.info('Listening on http://localhost:3000/graphql');\n});\n")),(0,a.kt)("p",null,"And you can test your queries using built-in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/graphql/graphiql/tree/master/packages/graphiql"},"GraphiQL"),";"),(0,a.kt)("iframe",{src:"https://codesandbox.io/embed/angry-night-e3x06?autoresize=1&fontsize=14&hidenavigation=1&theme=dark",style:{width:"100%",height:"500px",border:0,borderRadius:"4px",overflow:"hidden"},title:"express-graphql-tools-example",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}),(0,a.kt)("h2",{id:"adding-subscriptions-support"},"Adding Subscriptions support"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/enisdenjo/graphql-ws"},(0,a.kt)("inlineCode",{parentName:"a"},"graphql-ws"))," offers a server and client implementation for transporting subscription events over WebSockets."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const http = require('http');\nconst express = require('express');\nconst { graphqlHTTP } = require('express-graphql');\nconst ws = require('ws'); // yarn add ws\nconst { useServer } = require('graphql-ws/lib/use/ws');\n\nconst typeDefs = require('./graphql/types');\nconst resolvers = require('./graphql/resolvers');\n\nconst { makeExecutableSchema } = require('@graphql-tools/schema');\n\nconst schema = makeExecutableSchema({\n  typeDefs,\n  resolvers,\n});\n\nconst app = express();\napp.use(\n  '/graphql',\n  graphqlHTTP({\n    schema,\n    graphiql: true,\n  })\n);\n\nconst server = http.createServer(app);\n\nconst wsServer = new ws.Server({\n  server,\n  path: '/graphql',\n});\n\nserver.listen(3000, () => {\n  useServer({ schema }, wsServer);\n  console.info('Listening on http://localhost:3000/graphql');\n});\n")))}c.isMDXComponent=!0}}]);