(self.webpackChunk_graphql_tools_website=self.webpackChunk_graphql_tools_website||[]).push([[1553],{5318:function(e,t,r){"use strict";r.d(t,{Zo:function(){return m},kt:function(){return f}});var n=r(7378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(r),f=a,g=d["".concat(l,".").concat(f)]||d[f]||c[f]||i;return r?n.createElement(g,s(s({ref:t},m),{},{components:r})):n.createElement(g,s({ref:t},m))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6203:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return c}});var n=r(9603),a=r(120),i=(r(7378),r(5318)),s=["components"],o={},l={unversionedId:"api/interfaces/merge_src.mergeschemasconfig",id:"api/interfaces/merge_src.mergeschemasconfig",isDocsHomePage:!1,title:"Interface: MergeSchemasConfig&lt;Resolvers\\&gt;",description:"merge/src.MergeSchemasConfig",source:"@site/docs/api/interfaces/merge_src.mergeschemasconfig.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/merge_src.mergeschemasconfig",permalink:"/docs/api/interfaces/merge_src.mergeschemasconfig",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/api/interfaces/merge_src.mergeschemasconfig.md",version:"current",frontMatter:{},sidebar:"someSidebar",previous:{title:"Interface: MergeResolversOptions",permalink:"/docs/api/interfaces/merge_src.mergeresolversoptions"},next:{title:"Interface: MergeTypeCandidate&lt;TContext\\&gt;",permalink:"/docs/api/interfaces/stitch_src.mergetypecandidate"}},p=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Table of contents",id:"table-of-contents",children:[{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"assumeValid",id:"assumevalid",children:[]},{value:"assumeValidSDL",id:"assumevalidsdl",children:[]},{value:"commentDescriptions",id:"commentdescriptions",children:[]},{value:"consistentEnumMerge",id:"consistentenummerge",children:[]},{value:"convertExtensions",id:"convertextensions",children:[]},{value:"exclusions",id:"exclusions",children:[]},{value:"forceSchemaDefinition",id:"forceschemadefinition",children:[]},{value:"ignoreFieldConflicts",id:"ignorefieldconflicts",children:[]},{value:"logger",id:"logger",children:[]},{value:"resolverValidationOptions",id:"resolvervalidationoptions",children:[]},{value:"resolvers",id:"resolvers",children:[]},{value:"reverseDirectives",id:"reversedirectives",children:[]},{value:"schemaDirectives",id:"schemadirectives",children:[]},{value:"schemas",id:"schemas",children:[]},{value:"sort",id:"sort",children:[]},{value:"throwOnConflict",id:"throwonconflict",children:[]},{value:"typeDefs",id:"typedefs",children:[]},{value:"useSchemaDefinition",id:"useschemadefinition",children:[]}]}],m={toc:p};function c(e){var t=e.components,r=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../modules/merge_src"},"merge/src"),".MergeSchemasConfig"),(0,i.kt)("p",null,"Configuration object for schema merging"),(0,i.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Resolvers")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Resolvers"),": ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/modules/utils#iresolvers"},"IResolvers")," = ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/modules/utils#iresolvers"},"IResolvers"))))),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"BuildSchemaOptions")),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},"MergeSchemasConfig")))),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"properties"},"Properties"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#assumevalid"},"assumeValid")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#assumevalidsdl"},"assumeValidSDL")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#commentdescriptions"},"commentDescriptions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#consistentenummerge"},"consistentEnumMerge")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#convertextensions"},"convertExtensions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#exclusions"},"exclusions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#forceschemadefinition"},"forceSchemaDefinition")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#ignorefieldconflicts"},"ignoreFieldConflicts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#logger"},"logger")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#resolvervalidationoptions"},"resolverValidationOptions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#resolvers"},"resolvers")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#reversedirectives"},"reverseDirectives")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#schemadirectives"},"schemaDirectives")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#schemas"},"schemas")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#sort"},"sort")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#throwonconflict"},"throwOnConflict")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#typedefs"},"typeDefs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/api/interfaces/merge_src.mergeschemasconfig#useschemadefinition"},"useSchemaDefinition"))),(0,i.kt)("h2",{id:"properties-1"},"Properties"),(0,i.kt)("h3",{id:"assumevalid"},"assumeValid"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"assumeValid"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"When building a schema from a GraphQL service's introspection result, it\nmight be safe to assume the schema is valid. Set to true to assume the\nproduced schema is valid."),(0,i.kt)("p",null,"Default: false"),(0,i.kt)("h4",{id:"inherited-from"},"Inherited from"),(0,i.kt)("p",null,"BuildSchemaOptions.assumeValid"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"node_modules/graphql/type/schema.d.ts:122"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"assumevalidsdl"},"assumeValidSDL"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"assumeValidSDL"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Set to true to assume the SDL is valid."),(0,i.kt)("p",null,"Default: false"),(0,i.kt)("h4",{id:"inherited-from-1"},"Inherited from"),(0,i.kt)("p",null,"BuildSchemaOptions.assumeValidSDL"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"node_modules/graphql/utilities/buildASTSchema.d.ts:22"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"commentdescriptions"},"commentDescriptions"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"commentDescriptions"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Descriptions are defined as preceding string literals, however an older\nexperimental version of the SDL supported preceding comments as\ndescriptions. Set to true to enable this deprecated behavior.\nThis option is provided to ease adoption and will be removed in v16."),(0,i.kt)("p",null,"Default: false"),(0,i.kt)("h4",{id:"inherited-from-2"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#commentdescriptions"},"commentDescriptions")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L49"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:49")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"consistentenummerge"},"consistentEnumMerge"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"consistentEnumMerge"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"inherited-from-3"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#consistentenummerge"},"consistentEnumMerge")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L71"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:71")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"convertextensions"},"convertExtensions"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"convertExtensions"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"inherited-from-4"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#convertextensions"},"convertExtensions")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L70"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:70")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"exclusions"},"exclusions"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"exclusions"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"[]"),(0,i.kt)("h4",{id:"inherited-from-5"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#exclusions"},"exclusions")),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L68"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:68")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"forceschemadefinition"},"forceSchemaDefinition"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"forceSchemaDefinition"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Creates schema definition, even when no types are available\nProduces: ",(0,i.kt)("inlineCode",{parentName:"p"},"schema { query: Query }")),(0,i.kt)("p",null,"Default: false"),(0,i.kt)("h4",{id:"inherited-from-6"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#forceschemadefinition"},"forceSchemaDefinition")),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L34"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:34")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ignorefieldconflicts"},"ignoreFieldConflicts"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"ignoreFieldConflicts"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("h4",{id:"inherited-from-7"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#ignorefieldconflicts"},"ignoreFieldConflicts")),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L72"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:72")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"logger"},"logger"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"logger"),": ",(0,i.kt)("a",{parentName:"p",href:"schema_src.ilogger"},"ILogger")),(0,i.kt)("p",null,"Custom logger instance"),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L41"},"packages/merge/src/merge-schemas.ts:41")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resolvervalidationoptions"},"resolverValidationOptions"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"resolverValidationOptions"),": ",(0,i.kt)("a",{parentName:"p",href:"utils_src.iresolvervalidationoptions"},"IResolverValidationOptions")),(0,i.kt)("p",null,"Options to validate the resolvers being merged, if provided"),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L37"},"packages/merge/src/merge-schemas.ts:37")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"resolvers"},"resolvers"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"resolvers"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Resolvers")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Resolvers"),"[]"),(0,i.kt)("p",null,"Additional resolvers to also merge"),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L29"},"packages/merge/src/merge-schemas.ts:29")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"reversedirectives"},"reverseDirectives"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"reverseDirectives"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Puts the next directive first."),(0,i.kt)("p",null,"Default: false"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example:")),"\nGiven:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"}," type User { a: String @foo }\n type User { a: String @bar }\n")),(0,i.kt)("p",null,"Results:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," type User { a: @bar @foo }\n")),(0,i.kt)("h4",{id:"inherited-from-8"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#reversedirectives"},"reverseDirectives")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L67"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:67")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"schemadirectives"},"schemaDirectives"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"schemaDirectives"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("p",null,"Schema directives to apply to the type definitions being merged, if provided"),(0,i.kt)("h4",{id:"index-signature"},"Index signature"),(0,i.kt)("p",null,"\u25aa ","[directiveName: ",(0,i.kt)("inlineCode",{parentName:"p"},"string"),"]",": typeof ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/classes/utils_src.schemadirectivevisitor"},"SchemaDirectiveVisitor")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L33"},"packages/merge/src/merge-schemas.ts:33")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"schemas"},"schemas"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"schemas"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"GraphQLSchema"),"[]"),(0,i.kt)("p",null,"The schemas to be merged"),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L21"},"packages/merge/src/merge-schemas.ts:21")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"sort"},"sort"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"sort"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/modules/merge#comparefn"},"CompareFn"),"<","string\\",">"),(0,i.kt)("h4",{id:"inherited-from-9"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#sort"},"sort")),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L69"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:69")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"throwonconflict"},"throwOnConflict"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"throwOnConflict"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Throws an error on a merge conflict"),(0,i.kt)("p",null,"Default: false"),(0,i.kt)("h4",{id:"inherited-from-10"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#throwonconflict"},"throwOnConflict")),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L40"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:40")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"typedefs"},"typeDefs"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"typeDefs"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"DocumentNode")," ","|"," (",(0,i.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"DocumentNode"),")[]"),(0,i.kt)("p",null,"Additional type definitions to also merge"),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/merge-schemas.ts#L25"},"packages/merge/src/merge-schemas.ts:25")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"useschemadefinition"},"useSchemaDefinition"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"useSchemaDefinition"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Produces ",(0,i.kt)("inlineCode",{parentName:"p"},"schema { query: ..., mutation: ..., subscription: ... }")),(0,i.kt)("p",null,"Default: true"),(0,i.kt)("h4",{id:"inherited-from-11"},"Inherited from"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"merge_src.config"},"Config"),".",(0,i.kt)("a",{parentName:"p",href:"/docs/api/interfaces/merge_src.config#useschemadefinition"},"useSchemaDefinition")),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ardatan/graphql-tools/blob/master/packages/merge/src/typedefs-mergers/merge-typedefs.ts#L27"},"packages/merge/src/typedefs-mergers/merge-typedefs.ts:27")))}c.isMDXComponent=!0}}]);