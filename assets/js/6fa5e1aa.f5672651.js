(self.webpackChunk_graphql_tools_website=self.webpackChunk_graphql_tools_website||[]).push([[9406],{5318:function(e,r,t){"use strict";t.d(r,{Zo:function(){return c},kt:function(){return f}});var o=t(7378);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var m=o.createContext({}),l=function(e){var r=o.useContext(m),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=l(e.components);return o.createElement(m.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},u=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,m=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(t),f=n,d=u["".concat(m,".").concat(f)]||u[f]||s[f]||a;return t?o.createElement(d,i(i({ref:r},c),{},{components:t})):o.createElement(d,i({ref:r},c))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=u;var p={};for(var m in r)hasOwnProperty.call(r,m)&&(p[m]=r[m]);p.originalType=e,p.mdxType="string"==typeof e?e:n,i[1]=p;for(var l=2;l<a;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5112:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return p},metadata:function(){return m},toc:function(){return l},default:function(){return s}});var o=t(9603),n=t(120),a=(t(7378),t(5318)),i=["components"],p={id:"migration-from-import",title:"Migration from GraphQL Import",sidebar_label:"From GraphQL Import",description:"Migration from GraphQL Import"},m={unversionedId:"migration-from-import",id:"migration-from-import",isDocsHomePage:!1,title:"Migration from GraphQL Import",description:"Migration from GraphQL Import",source:"@site/docs/migration-from-import.md",sourceDirName:".",slug:"/migration-from-import",permalink:"/docs/migration-from-import",editUrl:"https://github.com/ardatan/graphql-tools/edit/master/website/docs/migration-from-import.md",version:"current",sidebar_label:"From GraphQL Import",frontMatter:{id:"migration-from-import",title:"Migration from GraphQL Import",sidebar_label:"From GraphQL Import",description:"Migration from GraphQL Import"},sidebar:"someSidebar",previous:{title:"Migration from Merge GraphQL Schemas",permalink:"/docs/migration-from-merge-graphql-schemas"},next:{title:"@graphql-tools/batch-delegate",permalink:"/docs/api/modules/batch-delegate"}},l=[],c={toc:l};function s(e){var r=e.components,t=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"GraphQL Import was an NPM package that allows you import and export definitions using ",(0,a.kt)("inlineCode",{parentName:"p"},"#import")," syntax in ",(0,a.kt)("inlineCode",{parentName:"p"},".graphql")," files. So this package has been moved under GraphQL Tools monorepo. It is really easy to migrate. You need two different packages ",(0,a.kt)("inlineCode",{parentName:"p"},"@graphql-tools/load")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"@graphql-tools/graphql-file-loader"),"."),(0,a.kt)("p",null,"Before;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { importSchema } from 'graphql-import';\nimport { makeExecutableSchema } from 'graphql-tools';\nimport { join } from 'path';\n\nconst typeDefs = importSchema(join(__dirname, 'schema.graphql'));\nconst resolvers = {\n  Query: {/**...*/}\n};\nconst schema = makeExecutableSchema({ typeDefs, resolvers });\n")),(0,a.kt)("p",null,"After;"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { loadSchemaSync } from '@graphql-tools/load';\nimport { GraphQLFileLoader } from '@graphql-tools/graphql-file-loader';\nimport { addResolversToSchema } from '@graphql-tools/schema';\nimport { join } from 'path';\n\nconst schema = loadSchemaSync(join(__dirname, 'schema.graphql'), { loaders: [new GraphQLFileLoader()] });\nconst resolvers = { Query: {/**...*/} };\n\nconst schemaWithResolvers = addResolversToSchema({\n  schema,\n  resolvers,\n});\n")),(0,a.kt)("p",null,"You can learn more about those new packages in ",(0,a.kt)("a",{parentName:"p",href:"/docs/schema-loading"},"Schema Loading")," section."))}s.isMDXComponent=!0}}]);